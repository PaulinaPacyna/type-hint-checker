name: On pull request to main

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  get_release_version:
    run: |
      echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
  publish_to_pypi:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
  create_github_release:
    name: "Create github release"
    runs-on: "ubuntu-latest"
    steps:
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "v${{ env.VERSION }"
        prerelease: false
        title: "v${{ env.VERSION }"
        files: |
          LICENSE.txt
          build/*.whl
  test_pre_commit_from_tag:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install dependencies
        run: |
          set -e
          rm -r type_hint_checker
          rm .pre-commit-config-local.yaml .pre-commit-hooks.yaml .pylintrc README.md setup.cfg setup.py
          python -m pip install --upgrade pip
          pip install pre-commit pytest
          pre-commit install
          pre-commit run --all-files || true #  For pre-commit initialization
      - name: Test with pytest
        run: |
          python -m pytest tests/test_pre_commit.py

  install_from_pypi:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          rm -r type_hint_checker
          rm .pre-commit-config.yaml .pre-commit-hooks.yaml .pylintrc README.md setup.cfg setup.py
          python -m pip install --upgrade pip
          pip install pytest
          pip install type-hint-checker=={{ env.VERSION }}
      - name: Test with pytest
        run: |
          python -m pytest tests/test_command_line.py

  test_from_local:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: "${{ matrix.python-version }}"
    - name: Add type_hint_checker to PYTHONPATH
      run: |
        echo "PYTHONPATH=$PYTHONPATH:$PWD/type_hint_checker" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
        rm -r type_hint_checker
        rm .pre-commit-config.yaml .pre-commit-hooks.yaml .pylintrc README.md setup.cfg setup.py
        python -m pip install --upgrade pip
        pip install pytest
        pip install type-hint-checker=={{ env.VERSION }}
    - name: Test with pytest
      run: |
          pytest tests/test_unit_tests.py
